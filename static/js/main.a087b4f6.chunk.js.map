{"version":3,"sources":["store/index.ts","components/User/User.tsx","components/Todo/Todo.tsx","components/TodoList/TodoList.tsx","api.ts","App.tsx","index.tsx"],"names":["initialState","todos","isLoaded","setTodos","type","payload","selectTodos","state","getLoadingStatus","store","createStore","action","sort","first","second","user","name","localeCompare","title","Number","completed","filter","todo","id","User","props","className","Todo","dispatch","useDispatch","toString","onClick","deleteTodo","TodoList","map","key","getUrl","endpoint","getPreparedTodos","a","fetch","fetchedTodos","fetchedUsers","json","jsonTodos","jsonUsers","data","users","find","userId","App","useSelector","handleStart","length","disabled","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a087b4f6.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\n\ninterface RootState {\n  todos: Todo[];\n  isLoaded: boolean;\n}\n\nconst initialState: RootState = {\n  todos: [],\n  isLoaded: false\n}\n\nconst SET_LOADED_STATUS = 'SET_LOADED_STATUS';\nconst SET_TODOS = 'SET_TODOS';\nconst TODOS_SORT_USER = 'TODOS_SORT_USER';\nconst TODOS_SORT_TITLE = 'TODOS_SORT_TITLE';\nconst TODOS_SORT_COMPLETED = 'TODOS_SORT_COMPLETED';\nconst DELETE_TODO = 'DELETE_TODO';\n\nexport const setTodos = (todos: Todo[]) => ({ type: SET_TODOS, payload: todos});\nexport const setLoadingStatus = () => ({ type: SET_LOADED_STATUS});\nexport const todosSortUser = () => ({ type: TODOS_SORT_USER });\nexport const todosSortTitle = () => ({ type: TODOS_SORT_TITLE });\nexport const todosSortCompleted = () => ({ type: TODOS_SORT_COMPLETED });\nexport const deleteTodo = (id: Number) => ({ type: DELETE_TODO, payload: id });\n\nexport const selectTodos = (state: RootState) => state.todos;\nexport const getLoadingStatus = (state: RootState) => state.isLoaded;\n\nconst reducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.payload\n      };\n    case SET_LOADED_STATUS:\n      return {\n        ...state,\n        isLoaded: true\n      };\n    case TODOS_SORT_USER:\n      return {\n        ...state,\n        todos: [...state.todos].sort((first, second) => first.user.name.localeCompare(second.user.name))\n      };\n    case TODOS_SORT_TITLE:\n      return {\n        ...state,\n        todos: [...state.todos].sort((first, second) => first.title.localeCompare(second.title))\n      };\n    case TODOS_SORT_COMPLETED:\n      return {\n        ...state,\n        todos: [...state.todos].sort((first, second) => Number(second.completed) - Number(first.completed))\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: [...state.todos].filter(todo => todo.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport './User.css';\n\ntype UserProps = {\n  user: User;\n};\n\nexport const User: React.FC<UserProps> = (props) => {\n  const { user } = props;\n\n  return (\n    <span className=\"user\">\n      {user.name}\n    </span>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './Todo.css';\nimport { User } from '../User/User';\nimport { deleteTodo } from '../../store';\n\ntype TodoProps = {\n  todo: Todo;\n};\n\nexport const Todo: React.FC<TodoProps> = ({ todo }) => {\n  const dispatch = useDispatch();\n\n  const onDelete = (id: Number) => {\n    dispatch(deleteTodo(id));\n  };\n\n  return (\n    <>\n      <span className=\"title\">\n        {todo.title}\n      </span>\n\n      <User user={todo.user} />\n\n      <span className={`todo__status todo__status-${todo.completed}`}>\n        {todo.completed.toString()}\n      </span>\n\n      <button type=\"button\" onClick={() => onDelete(todo.id)}>X</button>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './TodoList.css';\nimport { Todo } from '../Todo/Todo';\n\nimport {\n  todosSortUser,\n  todosSortTitle,\n  todosSortCompleted\n} from '../../store';\n\ntype TodoListProps = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  const dispatch = useDispatch();\n\n  const sortByTitle = () => {\n    dispatch(todosSortTitle());\n  };\n\n  const sortByCompleted = () => {\n    dispatch(todosSortCompleted());\n  };\n\n  const sortByUserName = () => {\n    dispatch(todosSortUser());\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={sortByTitle}>Sort by Todo title</button>\n      <button type=\"button\" onClick={sortByCompleted}>Sort by Completed</button>\n      <button type=\"button\" onClick={sortByUserName}>Sort by User</button>\n      <ul>\n        {\n          todos.map(todo => (\n            <li className=\"todo\" key={todo.id}>\n              <Todo todo={todo} />\n            </li>\n          ))\n        }\n      </ul>\n    </>\n  );\n};\n","const getUrl = (endpoint: string) => (`https://mate.academy/students-api/${endpoint}`);\n\nexport const getPreparedTodos = async (): Promise<Todo[]> => {\n  const fetchedTodos = await fetch(getUrl('todos'));\n  const fetchedUsers = await fetch(getUrl('users'));\n  const jsonTodos = await fetchedTodos.json();\n  const jsonUsers = await fetchedUsers.json();\n  const todos = jsonTodos.data;\n  const users = jsonUsers.data;\n\n  return todos.map((todo: Todo) => ({\n    ...todo,\n    user: users.find((user: User) => user.id === todo.userId),\n  }));\n};\n","import React, { FC } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { getPreparedTodos } from './api';\nimport {\n  setTodos,\n  setLoadingStatus,\n  selectTodos,\n  getLoadingStatus,\n} from './store'\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(selectTodos);\n  const isLoaded = useSelector(getLoadingStatus);\n\n  const handleStart = async () => {\n    dispatch(setLoadingStatus());\n\n    const data = await getPreparedTodos();\n\n    dispatch(setTodos(data));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      <p>\n        <span>Todos: </span>\n        {todos.length}\n      </p>\n\n      {todos.length === 0\n        ? (\n          <button\n            type=\"button\"\n            disabled={isLoaded}\n            onClick={handleStart}\n          >\n            {!isLoaded ? 'Start' : 'Loading...'}\n          </button>\n        )\n        : <TodoList todos={todos} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}